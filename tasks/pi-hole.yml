---
- name: Create Pi-hole folder on Pi.
  ansible.builtin.file:
    path: "{{ config_dir }}/pi-hole"
    state: directory
    mode: 0755
  become: false

- name: Copy Pi-hole docker-compose template to Pi.
  ansible.builtin.template:
    src: templates/pi-hole-docker-compose.yml.j2
    dest: "{{ config_dir }}/pi-hole/docker-compose.yml"
    mode: '0640'
  become: false
  notify: Restart pi-hole

# TODO: The first time this playbook is run, the `pi` user may not be added
# to the `docker` group, so this task may fail.
- name: Ensure Pi-hole is running.
  community.docker.docker_compose:
    project_src: "{{ config_dir }}/pi-hole/"
    build: false
  become: false

- name: Create resolveconf for local name server use
  copy:
    content: "name_servers=127.0.0.1"
    dest: /etc/resolvconf.conf
    force: no
    group: sys
    owner: root
    mode: 0644

# Pretty sure I changed this because I am working on armbian
# using a Libre Computer, the resolveconf file did not already exist.
# Copying this content to a new file every time should mean we don't
# need to regnerate, right?
# That step was failing for me I suppose because there is no longer
# a "resolveconf_file" that is registered due to adding the previous
# step and disabling the next one

#- name: Update resolveconf for local name server use.
#  ansible.builtin.lineinfile:
#    line: "name_servers=127.0.0.1"
#    dest: "/etc/resolvconf.conf"
#    regexp: "^#?name_servers="
#  register: resolvconf_file

# - name: Regenerate resolvconf if file is changed.
#   ansible.builtin.command: resolvconf -u
#   changed_when: false
#   when: resolvconf_file is changed
