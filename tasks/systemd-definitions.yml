---
# Figure out SystemD directory

# TODO: Make these loops....sometime
- name: Check if Debian
  set_fact:
    systemd_dir: "/lib/systemd/system"
  when:
  - ansible_facts.os_family == "Debian"

- name: Check if Arch
  set_fact:
    systemd_dir: "/etc/systemd/system"
  when:
  - ansible_facts.os_family == "Archlinux"

- name: Check if RedHat
  set_fact:
    systemd_dir: "/etc/systemd/system"
  when:
  - ansible_facts.os_family == "RedHat"

# There's a better way to do this; just don't know it and
# am unwilling to spend effort when this works fine
- name: Set Variables for Pi-Hole systemd service template
  set_fact:
    description: Pi-Hole DNS Ad Blocker
    working_sub_dir: /pi-hole
    dependent_service: "bind9.service"

- name: Copy Pi-hole systemd service file .
  ansible.builtin.template:
    src: templates/systemd-service.j2
    dest: "{{ systemd_dir }}/pi-hole.service"
    mode: '0774'
  become: true
  when: systemd_dir and pihole_enable

- name: Set Variables for internet monitoring systemd service template
  set_fact:
    description: Internet Monitoring and Grafana
    working_sub_dir: /internet-monitoring
    dependent_service: "docker.service"

- name: Copy internet-monitoring docker-compose template to Pi.
  ansible.builtin.template:
    src: templates/systemd-service.j2
    dest: "{{ systemd_dir }}/internet-monitoring.service"
    mode: '0774'
  become: true
  when: systemd_dir and monitoring_enable

- name: Set Variables for dnsmasq dns systemd service template
  set_fact:
    description: Dnsmasq Forwarding DNS
    working_sub_dir: /dnsmasq-dns

- name: Copy Dnsmasq docker-compose template to Pi.
  ansible.builtin.template:
    src: templates/systemd-service.j2
    dest: "{{ systemd_dir }}/dnsmasq-dns.service"
    mode: '0774'
  become: true
  when: systemd_dir and dnsmasq_enable

- name: Set Variables for bind9 dns systemd service template
  set_fact:
    description: Bind9 Recursive DNS
    working_sub_dir: /bind9-dns
    dependent_service: "internet-monitoring.service"

- name: Copy bind9 docker-compose template to Pi.
  ansible.builtin.template:
    src: templates/systemd-service.j2
    dest: "{{ systemd_dir }}/bind9.service"
    mode: '0774'
  become: true
  when: systemd_dir and bind9_enable

- name: Set Variables for OpenSpeedTest systemd service template
  set_fact:
    description: OpenSpeedTest DNS Ad Blocker
    working_sub_dir: /openspeedtest

- name: Copy Open Speedtest systemd service file .
  ansible.builtin.template:
    src: templates/systemd-service.j2
    dest: "{{ systemd_dir }}/openspeedtest.service"
    mode: '0774'
  become: true
  when: systemd_dir and openspeedtest_enable

# Enable new systemd service

- name: Enable service pi-hole.service, and not touch the state
  ansible.builtin.service:
    name: pi-hole.service
    enabled: yes
  when: systemd_dir and pihole_enable

- name: Enable service internet-monitoring.service, and not touch the state
  ansible.builtin.service:
    name: internet-monitoring.service
    enabled: yes
  when: systemd_dir and monitoring_enable

- name: Enable service dnsmasq-dns.service, and not touch the state
  ansible.builtin.service:
    name: dnsmasq-dns.service
    enabled: yes
  when: systemd_dir and dnsmasq_enable

- name: Enable service bind9.service, and not touch the state
  ansible.builtin.service:
    name: bind9.service
    enabled: yes
  when: systemd_dir and bind9_enable

- name: Enable service openspeedtest.service, and not touch the state
  ansible.builtin.service:
    name: openspeedtest.service
    enabled: yes
  when: systemd_dir and openspeedtest_enable